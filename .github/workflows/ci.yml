name: Build and Test JavaFX Application

# Trigger workflow on push or pull request to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    # Specify the operating system for the runner (Ubuntu, Windows, or macOS)
    runs-on: windows-latest  # You can change this to macos-latest or ubuntu-latest if needed

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3  # Latest version

      # Step 2: Set up JDK 21 (adjust to match your pom.xml version)
      - name: Set up JDK 21
        uses: actions/setup-java@v3  # Latest version
        with:
          java-version: '21'  # Match this to your project's version
          distribution: 'adoptopenjdk'

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3  # Latest version
        with:
          path: C:\Users\runneradmin\.m2\repository  # Adjusted path for Windows
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Install Maven dependencies (skip tests for now)
      - name: Install dependencies
        run: mvn install -DskipTests=true  # Skips tests to speed up dependency installation

      # Step 5: Run tests (Uncomment if you want to run tests)
      - name: Run tests
        run: mvn test  # You can remove the skipTests here if you want to run tests

      # Step 6: Build the project (skip tests here because they are already run)
      - name: Build the project
        run: mvn package -DskipTests=true  # Builds and packages the JavaFX application

      # Optional: Run JavaFX application (if needed)
      # - name: Run JavaFX Application
      #   run: mvn javafx:run  # Uncomment if you need to run your JavaFX app directly
